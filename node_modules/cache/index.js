var fs = require('fs');
var config_funcs 	= require('configuration');

//  Local cache for static content
var zcache = { 
	'index.html': {
		'Content':'',
		'FileWatcher' : ''
	}
};


var configuration = { caching: true };

exports.configuration = configuration;

function addToCache(filename){
	if(filename !== undefined){
		zcache[filename] = {
			'Content': fs.readFileSync('./' + filename),
			'FileWatcher': fs.watchFile(filename, { persistent : false }, function (curr, prev){
					if(curr.mtime !== prev.mtime && filename !== undefined){
						zcache[filename]['Content'] = fs.readFileSynce('./' + filename);
					}
				})
		}

	}
};

function isInCache(filename){
	return (filename !== undefined && zcache[filename] !== undefined);
};




exports.getUncached = function(fileName){
	try{
		var content = fs.readFileSync(fileName);
		return { failed: false, 'content': content};
	}catch(err){
		return {failed: true, 'error' : err};
	}
};


exports.getCached = function(fileName){
	if(!isInCache(fileName)){
		try{
			addToCache(fileName);
		}catch(err){
			return {failed: true, 'error': err};
		}
	}
	return {failed: false, 'content': zcache[fileName].Content};
};


exports.get = function(fileName){
	if(configuration.caching){
		return getCached(fileName);
	}else{
		return getUncached(fileName);
	}
};